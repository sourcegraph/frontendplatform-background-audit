
name: Issue Labeled
on:
  schedule:
    - cron: '10 13 * * 1-5' # At 13:30 on every day-of-week from Monday through Friday https://crontab.guru/#30_13_*_*_1-5
  # will turn this on for real once I test post merge
  workflow_dispatch:
    if: github.actor == 'jasongornall'
    branches: [ main ]
  # issues:
  #   types: [labeled, reopened, opened]

jobs:
  # if manually triggered grab a random issue (will subtitute for cron when I figure out a good cadence)
  
  issue-scheduled:
    defaults:
      run:
        shell: bash
        working-directory: dev/src
    runs-on: ubuntu-latest
    outputs:
      random-issue: ${{ steps.random_issue.outputs.random-issue }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile --ignore-scripts
      - name: Get Random Issue
        id: random_issue
        env:
          REFINEMENT_BOT: ${{ secrets.REFINEMENT_BOT }}
          TEAM: "team/frontend-platform"
          MINIMUM_AGE: 14
        run: |
          npx ts-node getRandomIssue.ts
      - name: Generate Slack Message
        env:
          REFINEMENT_BOT: ${{ secrets.REFINEMENT_BOT }}
          RANDOM_ISSUE: ${{ steps.random_issue.outputs.issue }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          PRIORITY_LIST: '[{"value": "fpt/p0","name":"Critical"},{"value": "fpt/p1","name":"Important"},{"value": "fpt/p2","name":"Needed"},{"value": "fpt/p3","name":"Nice to Have"}]'
          CHECK_PRIORITY: true
        run: |
          npx ts-node sendMessage.ts
